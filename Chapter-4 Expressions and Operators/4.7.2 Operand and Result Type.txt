4.7.2 Operand and Result Type

4.7.2 运算对象与结果的数据类型


Some operators work on values of any type, but most expect their operands to be of a specific type, and most operators return (or evaluate to) a value of a specific type. The Types column in Table 4-1 specifies operand types (before the arrow) and result type (after the arrow) for the operators.

除了部分js运算符可以用于操作任意类型的值，一般来说，运算符要求其运算对象为特定的数据类型。
具体要求可以查看表4-1。


JavaScript operators usually convert the type (see §3.8) of their operands as needed. The multiplication operator * expects numeric operands, but the expression "3" * "5" is legal because JavaScript can convert the operands to numbers. The value of this expression is the number 15, not the string “15”, of course. Remember also that every JavaScript value is either “truthy” or “falsy,” so operators that expect boolean operands will work with an operand of any type.

js运算符在数据类型不符时，会自动执行类型转换。
比如*只能用于计算数字，但是表达式"5" * "3"也是合法的，它会先转换为5*3再进行计算，得到数字15。
任何值都可以被转换为布尔值，所以布尔值运算符可以用于操作任何值。


Some operators behave differently depending on the type of the operands used with them. Most notably, the + operator adds numeric operands but concatenates string operands. Similarly, the comparison operators such as < perform comparison in numerical or alphabetical order depending on the type of the operands. The descriptions of individual operators explain their type-dependencies and specify what type conversions they perform.

还有些运算符的行为会随着运算对象类型的不同而改变。
最常用的是+运算符，用于数字加法和字符串链接。
类似地，<用于比较数字大小和字符串的字母表顺序。



