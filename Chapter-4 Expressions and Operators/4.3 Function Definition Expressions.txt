4.3 Function Definition Expressions

4.3 函数定义表达式


A function definition expression defines a JavaScript function, and the value of such an expression is the newly defined function. In a sense, a function definition expression is a “function literal” in the same way that an object initializer is an “object literal.” A function definition expression typically consists of the keyword function followed by a comma-separated list of zero or more identifiers (the parameter names) in parentheses and a block of JavaScript code (the function body) in curly braces. For example:
// This function returns the square of the value passed to it.
var square = function(x) { return x * x; }

函数定义表达式用于定义函数，表达式的值是一个新创建的函数。
从某种意义上说，函数定义表达式可以被看作是“函数直接量”，
类似于对象初始化表达式是“对象直接量”。
函数定义表达式通常由以下3部分组成：
1、function关键字；
2、以圆括号包含，逗号分隔的零个或多个参数；
3、以花括号包含的函数体。
例如：
// 求平方
var square = function(x) { return x * x; }


A function definition expression can also include a name for the function. Functions can also be defined using a function statement rather than a function expression. Complete details on function definition are in Chapter 8.

声明函数的另一种方法是使用函数语句。
function square(x) { return x * x; }
函数定义的具体内容将在第8章中介绍。

